#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
		
	Если Параметры.Свойство("Архив") Тогда
		// Отработка команды главного интерфейса "Архив бортов", покажем списоок только архивных бортов.
		ОтборАктивныеАрхив = Элементы.ОтборАктивныеАрхив.СписокВыбора[2].Значение;
		
	Иначе	
	    // иначе установим отбор при открытии только активных рейсов
		ОтборАктивныеАрхив = Элементы.ОтборАктивныеАрхив.СписокВыбора[1].Значение;
		
	КонецЕсли;
	
	УстановитьОтборРейсовНаСервере();
	УстановитьОформлениеВиджета();
				
КонецПроцедуры

#КонецОбласти  

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура ОтборАктивныеАрхивПриИзменении(Элемент)

	УстановитьОтборРейсовНаСервере(); 

КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыСписок

// Виджет заполненности рейсов
// 
// Параметры:
//  ИмяЭлемента - Строка - Имя элемента
//  Настройки - НастройкиКомпоновкиДанных - Настройки
//  Строки - СтрокиДинамическогоСписка - Строки
//
&НаСервереБезКонтекста
Процедура СписокПриПолученииДанныхНаСервере(ИмяЭлемента, Настройки, Строки)
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Список", Строки.ПолучитьКлючи());
		
	Запрос.Текст = "ВЫБРАТЬ
	               |	чартер_Рейсы.Ссылка КАК Рейс,
	               |	СУММА(чартер_РейсыКвотирование.КвотаНаРейс) КАК ОбщаяКвотаНаРейс,
	               |	чартер_Рейсы.КоличествоМест КАК КоличествоМест,
	               |	чартер_Рейсы.Архив КАК Архив
	               |ПОМЕСТИТЬ втКвотыОрганизаций
	               |ИЗ
	               |	Справочник.чартер_Рейсы.Квотирование КАК чартер_РейсыКвотирование
	               |		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.чартер_Рейсы КАК чартер_Рейсы
	               |		ПО чартер_РейсыКвотирование.Ссылка = чартер_Рейсы.Ссылка
	               |ГДЕ
	               |	чартер_Рейсы.Ссылка В(&Список)
	               |	И НЕ чартер_Рейсы.Архив
	               |
	               |СГРУППИРОВАТЬ ПО
	               |	чартер_Рейсы.Ссылка,
	               |	чартер_Рейсы.Архив,
	               |	чартер_Рейсы.КоличествоМест
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	КОЛИЧЕСТВО(чартер_ЗаписьНаРейс.ТабельныйНомер) КАК КоличествоМестЗанятыхОрганизациями,
	               |	чартер_ЗаписьНаРейс.Рейс КАК Рейс
	               |ПОМЕСТИТЬ втВсегоЗарегистрировано
	               |ИЗ
	               |	РегистрСведений.чартер_ЗаписьНаРейс КАК чартер_ЗаписьНаРейс
	               |ГДЕ
	               |	чартер_ЗаписьНаРейс.Рейс В(&Список)
	               |	И НЕ чартер_ЗаписьНаРейс.СтатусНаРейсе = ЗНАЧЕНИЕ(Перечисление.чартер_СтатусыНаРейсе.ЗаписьУдалена)
	               |	И НЕ чартер_ЗаписьНаРейс.Рейс.Архив
	               |
	               |СГРУППИРОВАТЬ ПО
	               |	чартер_ЗаписьНаРейс.Рейс
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	втКвотыОрганизаций.Рейс КАК Рейс,	              
	               |	ЕСТЬNULL(ВЫРАЗИТЬ(втВсегоЗарегистрировано.КоличествоМестЗанятыхОрганизациями * 100 / втКвотыОрганизаций.ОбщаяКвотаНаРейс КАК ЧИСЛО(10, 2)), 0) КАК ПроцентЗаполнения,
	               |	втКвотыОрганизаций.Архив КАК Архив
	               |ИЗ
	               |	втКвотыОрганизаций КАК втКвотыОрганизаций
	               |		ЛЕВОЕ СОЕДИНЕНИЕ втВсегоЗарегистрировано КАК втВсегоЗарегистрировано
	               |		ПО (втВсегоЗарегистрировано.Рейс = втКвотыОрганизаций.Рейс)";
	
    РезультатЗапроса = Запрос.Выполнить();
	Выборка = РезультатЗапроса.Выбрать();
	
	ДлинаПрогрессБара = 10;                     
	
	Пока Выборка.Следующий() Цикл 
			
		Если Выборка.Архив Тогда
			Продолжить;
		КонецЕсли;	
		
		СтрокаСписка = Строки[Выборка.Рейс];                                                                          	
		ПроцентПрогресса = Окр(Выборка.ПроцентЗаполнения/10, 0);		
		ВыполненоПроцентов = Окр(ПроцентПрогресса, 0);
		
		СтрокаПрогресса = "";
		Для Счетчик = 1 По ДлинаПрогрессБара Цикл
				СтрокаПрогресса = СтрокаПрогресса + ?(Счетчик <= ПроцентПрогресса, "■", "□"); 	
			КонецЦикла;  
			
			ПроцентПрогресса = "" + Выборка.ПроцентЗаполнения + "%";                 
			
			Попытка
				СтрокаСписка.Данные["СтрокаПрогресса"] = СтрокаПрогресса;
				СтрокаСписка.Данные["ПроцентПрогресса"] = ПроцентПрогресса;
				СтрокаСписка.Данные["ВыполненоПроцентов"] = ВыполненоПроцентов;	
				СтрокаСписка.Данные["ПроцентЗаполнения"] = Выборка.ПроцентЗаполнения;	
			Исключение
				ИнформацияОбОшибке = ПодробноеПредставлениеОшибки(ИнформацияОбОшибке());
				ЗаписьЖурналаРегистрации(НСтр("ru = 'Выполнение операции'"), УровеньЖурналаРегистрации.Ошибка, ,  
    																						, ИнформацияОбОшибке); 
			КонецПопытки;
			
		КонецЦикла;	                
		
КонецПроцедуры

#КонецОбласти 

#Область СлужебныеПроцедурыИФункции

&НаСервере
Функция ПолучитьТекстЗапросаДляРасчетаВиджета()
	
	Результат = "ВЫБРАТЬ
				|	чартер_Рейсы.Ссылка КАК Рейс,
				|	СУММА(чартер_РейсыКвотирование.КвотаНаРейс) КАК ОбщаяКвотаНаРейс,
				|	чартер_Рейсы.КоличествоМест КАК КоличествоМест,
				|	чартер_Рейсы.Архив КАК Архив
				|ПОМЕСТИТЬ втКвотыОрганизаций
				|ИЗ
				|	Справочник.чартер_Рейсы.Квотирование КАК чартер_РейсыКвотирование
				|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.чартер_Рейсы КАК чартер_Рейсы
				|		ПО чартер_РейсыКвотирование.Ссылка = чартер_Рейсы.Ссылка
				|ГДЕ
				|	чартер_Рейсы.Ссылка В (&Список)
				|	И НЕ чартер_Рейсы.Архив
				|СГРУППИРОВАТЬ ПО
				|	чартер_Рейсы.Ссылка,
				|	чартер_Рейсы.Архив,
				|	чартер_Рейсы.КоличествоМест
				|;
				|
				|////////////////////////////////////////////////////////////////////////////////
				|ВЫБРАТЬ
				|	КОЛИЧЕСТВО(чартер_ЗаписьНаРейс.ТабельныйНомер) КАК КоличествоМестЗанятыхОрганизациями,
				|	чартер_ЗаписьНаРейс.Рейс КАК Рейс
				|ПОМЕСТИТЬ втВсегоЗарегистрировано
				|ИЗ
				|	РегистрСведений.чартер_ЗаписьНаРейс КАК чартер_ЗаписьНаРейс
				|ГДЕ
				|	чартер_ЗаписьНаРейс.Рейс В (&Список)
				|	И НЕ чартер_ЗаписьНаРейс.СтатусНаРейсе = ЗНАЧЕНИЕ(Перечисление.чартер_СтатусыНаРейсе.ЗаписьУдалена)
				|	И НЕ чартер_ЗаписьНаРейс.Рейс.Архив
				|СГРУППИРОВАТЬ ПО
				|	чартер_ЗаписьНаРейс.Рейс
				|;
				|
				|////////////////////////////////////////////////////////////////////////////////
				|ВЫБРАТЬ
				|	втКвотыОрганизаций.Рейс КАК Рейс,
				|	ЕСТЬNULL(ВЫРАЗИТЬ(втВсегоЗарегистрировано.КоличествоМестЗанятыхОрганизациями * 100 /
				|		втКвотыОрганизаций.ОбщаяКвотаНаРейс КАК ЧИСЛО(10, 2)), 0) КАК ПроцентЗаполнения,
				|	втКвотыОрганизаций.Архив КАК Архив
				|ИЗ
				|	втКвотыОрганизаций КАК втКвотыОрганизаций
				|		ЛЕВОЕ СОЕДИНЕНИЕ втВсегоЗарегистрировано КАК втВсегоЗарегистрировано
				|		ПО (втВсегоЗарегистрировано.Рейс = втКвотыОрганизаций.Рейс)";
	
	Возврат Результат;
	
КонецФункции

&НаСервере
Процедура УстановитьОформлениеВиджета()
    	
	УсловноеОформление.Элементы.Очистить();
	
	УсловноеОформлениеВиджета = Список.КомпоновщикНастроек.Настройки.УсловноеОформление;
	
	// Список.ВыполненоПроцентов Равно "0"
	ЭлементОформления = УсловноеОформлениеВиджета.Элементы.Добавить();     
	ЭлементОформления.Оформление.УстановитьЗначениеПараметра("ЦветТекста", WebЦвета.Зеленый);
	
	ЭлементОтбора = ЭлементОформления.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));	
	ЭлементОтбора.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("ПроцентЗаполнения");
	ЭлементОтбора.ВидСравнения = ВидСравненияКомпоновкиДанных.Больше;
	ЭлементОтбора.ПравоеЗначение = 3;
	
	ПолеОформления = ЭлементОформления.Поля.Элементы.Добавить();
	ПолеОформления.Поле = Новый ПолеКомпоновкиДанных("ПроцентПрогресса");
	ПолеОформления = ЭлементОформления.Поля.Элементы.Добавить();
	ПолеОформления.Поле = Новый ПолеКомпоновкиДанных("СтрокаПрогресса");   
	
	ПолеОформления.Использование = Истина;

	// ****************************************************************************************************//
	
	// Список.ВыполненоПроцентов Больше "1" И Список.ВыполненоПроцентов Меньше "26"	
	////ЭлементОформления = УсловноеОформлениеВиджета.Элементы.Добавить();     
	////ЭлементОформления.Оформление.УстановитьЗначениеПараметра("ЦветТекста", WebЦвета.Красный);
	////
	////ГруппаОтбора = ЭлементОформления.Отбор.Элементы.Добавить(Тип("ГруппаЭлементовОтбораКомпоновкиДанных"));
	////ГруппаОтбора.ТипГруппы = ТипГруппыЭлементовОтбораКомпоновкиДанных.ГруппаИ;
	////
	////ЭлементОтбора1 = ЭлементОформления.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));	 	
	////ЭлементОтбора = ГруппаОтбора.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	////ЭлементОтбора.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("ПроцентЗаполнения");
	////ЭлементОтбора.ВидСравнения = ВидСравненияКомпоновкиДанных.Больше;
	////ЭлементОтбора.ПравоеЗначение = 1;          
	////
	////ЭлементОтбора = ГруппаОтбора.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	////ЭлементОтбора.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("ПроцентЗаполнения");
	////ЭлементОтбора.ВидСравнения = ВидСравненияКомпоновкиДанных.МеньшеИлиРавно;
	////ЭлементОтбора.ПравоеЗначение = 25;
	////
	////ПолеОформления1 = ЭлеметОформления1.Поля.Элементы.Добавить();
	////ПолеОформления1.Поле = Новый ПолеКомпоновкиДанных("ПроцентПрогресса");
	////ПолеОформления1 = ЭлеметОформления1.Поля.Элементы.Добавить();
	////ПолеОформления1.Поле = Новый ПолеКомпоновкиДанных("СтрокаПрогресса");  
	////
	//// Список.ВыполненоПроцентов Больше или равно "26" И Список.ВыполненоПроцентов Меньше "51" 
	////ЭлеметОформления2 = УсловноеОформлениеВиджета.Элементы.Добавить();     
	////ЭлеметОформления2.Оформление.УстановитьЗначениеПараметра("ЦветТекста", WebЦвета.ЗеленоватоЖелтый);
	////
	////ЭлементОтбора = ЭлеметОформления.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));	 	
	////ЭлементОтбора.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("ПроцентЗаполнения");
	////ЭлементОтбора.ВидСравнения = ВидСравненияКомпоновкиДанных.МеньшеИлиРавно;
	////ЭлементОтбора.ПравоеЗначение = 51;
	////
	////ПолеОформления = ЭлеметОформления.Поля.Элементы.Добавить();
	////ПолеОформления.Поле = Новый ПолеКомпоновкиДанных("ПроцентПрогресса");
	////ПолеОформления = ЭлеметОформления.Поля.Элементы.Добавить();
	////ПолеОформления.Поле = Новый ПолеКомпоновкиДанных("СтрокаПрогресса");   
	////
	////ПолеОформления.Использование = Истина;
	

	
КонецПроцедуры

&НаСервере
Процедура УстановитьОтборРейсовНаСервере()
	
	ПолеОтбора = Новый ПолеКомпоновкиДанных("Архив");
	ЭлементОтбора = ПолучитьЭлементОтбора(ПолеОтбора, Список.Отбор);
	
	Если ЭлементОтбора = Неопределено Тогда		
		ЭлементОтбора = Список.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных")); 
		ЭлементОтбора.ЛевоеЗначение = ПолеОтбора;
	КонецЕсли;
	
	Если ОтборАктивныеАрхив = 0 Тогда      // Все рейсы
		
		ЭлементОтбора.Использование = Ложь;
		        	
	ИначеЕсли ОтборАктивныеАрхив = 1 Тогда	// Только активые рейсы		
		
		ЭлементОтбора.ВидСравнения = ВидСравненияКомпоновкиДанных.ВСписке;
		ЭлементОтбора.ПравоеЗначение = Ложь;
		ЭлементОтбора.Использование = Истина;
                                             	
	ИначеЕсли ОтборАктивныеАрхив = 2 Тогда	// ТОлько архивные рейсы 		
		
		ЭлементОтбора.ВидСравнения = ВидСравненияКомпоновкиДанных.ВСписке;
		ЭлементОтбора.ПравоеЗначение = Истина;
		ЭлементОтбора.Использование = Истина;

	КонецЕсли;
	
КонецПроцедуры     

&НаСервере
Функция ПолучитьЭлементОтбора(ПолеОтбора, ОтборТаблицы)
	
	ТипЭлемент = Тип("ЭлементОтбораКомпоновкиДанных");
	
	Для каждого итЭлемент Из ОтборТаблицы.Элементы Цикл 
		Если ТипЗнч(итЭлемент) = ТипЭлемент И итЭлемент.ЛевоеЗначение = ПолеОтбора Тогда
			Возврат итЭлемент;	
		КонецЕсли;
	КонецЦикла;
	
	Возврат Неопределено;
	
КонецФункции

#КонецОбласти 