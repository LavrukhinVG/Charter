#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

// проверить в принципе наличие квот на данный рейс (возврат если совсем без квот)
// сравнить список организаций записанных на рейс и наличие на них квот (вывести организации по которым нет квоты)
// 
// Параметры:
//  Рейс - СправочникСсылка - ПроверяемыйРейс
// 
// Возвращаемое значение:
//  Булево - Квотирование на рейс заполнено
Функция КвотированиеНаРейсЗаполнено(Рейс) Экспорт
	
	ЕстьОшибки = Ложь;
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	чартер_РейсыКвотирование.Ссылка КАК Ссылка
	               |ИЗ
	               |	Справочник.чартер_Рейсы.Квотирование КАК чартер_РейсыКвотирование
	               |ГДЕ
	               |	чартер_РейсыКвотирование.Ссылка = &Рейс";
	
	Запрос.УстановитьПараметр("Рейс", Рейс);
	
	РезультатЗапроса = Запрос.Выполнить();
	Если РезультатЗапроса.Пустой() Тогда		
		СообщениеПользователю = СтрШаблон("Для построения отчета необходимо 
									|заполнить квоты для организаций на рейс %1!", Рейс);
		чартеры_ОбщиеПроцедурыИФункцииСервер.СообщитьПользователю(СообщениеПользователю);				
		ЕстьОшибки = Истина;
		Возврат ЕстьОшибки;                                    	
	КонецЕсли;	
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ РАЗЛИЧНЫЕ
	               |	чартер_ЗаписьНаРейс.Организация КАК Организация
	               |ПОМЕСТИТЬ втОрганизацииЗаписанныеНаРейс
	               |ИЗ
	               |	Документ.чартер_ЗаписьНаРейс КАК чартер_ЗаписьНаРейс
	               |ГДЕ
	               |	чартер_ЗаписьНаРейс.Рейс = &Рейс
	               |
	               |СГРУППИРОВАТЬ ПО
	               |	чартер_ЗаписьНаРейс.Организация
	               |
	               |ИНДЕКСИРОВАТЬ ПО
	               |	Организация
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ РАЗЛИЧНЫЕ
	               |	чартер_РейсыКвотирование.Организация КАК Организация
	               |ПОМЕСТИТЬ втКвотыДляОрганизацийНаРейс
	               |ИЗ
	               |	Справочник.чартер_Рейсы.Квотирование КАК чартер_РейсыКвотирование
	               |ГДЕ
	               |	чартер_РейсыКвотирование.Ссылка = &Рейс
	               |
	               |СГРУППИРОВАТЬ ПО
	               |	чартер_РейсыКвотирование.Организация
	               |
	               |ИНДЕКСИРОВАТЬ ПО
	               |	Организация
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	втКвотыДляОрганизацийНаРейс.Организация.Представление КАК КвотыОрганизации,
	               |	втОрганизацииЗаписанныеНаРейс.Организация.Представление КАК ЗарегистрированнаяОрганизация
	               |ИЗ
	               |	втОрганизацииЗаписанныеНаРейс КАК втОрганизацииЗаписанныеНаРейс
	               |		ЛЕВОЕ СОЕДИНЕНИЕ втКвотыДляОрганизацийНаРейс КАК втКвотыДляОрганизацийНаРейс
	               |		ПО втОрганизацииЗаписанныеНаРейс.Организация = втКвотыДляОрганизацийНаРейс.Организация";
	
	Запрос.УстановитьПараметр("Рейс", Рейс);
	
	РезультатЗапроса = Запрос.Выполнить();
	Выборка = РезультатЗапроса.Выбрать();
	Пока Выборка.Следующий() Цикл
		
		Если Выборка.КвотыОрганизации = Null Тогда
			Сообщение = СтрШаблон("Нет квоты для организации %1! Отчет будет не корректен"
													, Выборка.ЗарегистрированнаяОрганизация); 
			чартеры_ОбщиеПроцедурыИФункцииСервер.СообщитьПользователю(Сообщение);
			Продолжить;
		КонецЕсли;
	КонецЦикла;
    
	Возврат ЕстьОшибки;
	
КонецФункции

// Получить компоновку рейса.
// 
// Параметры:
//  Рейс - СправочникСсылка - ПроверяемыйРейс 
// Рейс
// 
// Возвращаемое значение:
//  Неопределено - Получить компоновку рейса
Функция ПолучитьКомпоновкуРейса(Рейс) Экспорт
	
	Результат = Неопределено;
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	чартер_Рейсы.ТипВС КАК ТипВС
	               |ИЗ
	               |	Справочник.чартер_Рейсы КАК чартер_Рейсы
	               |ГДЕ
	               |	чартер_Рейсы.Ссылка = &Рейс";
	
	Запрос.УстановитьПараметр("Рейс", Рейс);
	РезультатЗапроса = Запрос.Выполнить();
	Если РезультатЗапроса.Пустой() Тогда
		Результат = Неопределено;	
	Иначе
		Выборка = РезультатЗапроса.Выбрать();
		Выборка.Следующий();
		Результат = Выборка.ТипВС;
	КонецЕсли;
	
	Возврат Результат;
	
КонецФункции

// Доступность рейса.
// 
// Параметры:
//  Рейс - СправочникСсылка - ПроверяемыйРейс
// 
// Возвращаемое значение:
//  Булево - Доступность рейса в справочнике
Функция ДоступностьРейса(Рейс) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	чартер_Рейсы.Архив КАК Архив
	               |ИЗ
	               |	Справочник.чартер_Рейсы КАК чартер_Рейсы
	               |ГДЕ
	               |	чартер_Рейсы.Ссылка = &Ссылка";
	
	Запрос.УстановитьПараметр("Ссылка", Рейс);
	
	Результат = Запрос.Выполнить();
	Выборка = Результат.Выбрать();
	
	Выборка.Следующий();
	Если НЕ Выборка.Архив = Неопределено Тогда
		Возврат ?(Выборка.Архив, Ложь, Истина);
	Иначе 
		Возврат Выборка.Архив;
	КонецЕсли;
				
КонецФункции

#КонецОбласти

#Область ОбработчикиСобытий

Процедура ОбработкаПолученияПолейПредставления(Поля, СтандартнаяОбработка)
	
    СтандартнаяОбработка = Ложь;
    
    Поля.Добавить("Наименование");
    Поля.Добавить("ДатаРейса");
	
КонецПроцедуры

Процедура ОбработкаПолученияПредставления(Данные, Представление, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;    
    Представление = СтрШаблон("%1 дата рейса: %2", Данные.Description, Формат(Данные.ДатаРейса, "ДЛФ=Д"));
	
КонецПроцедуры

#КонецОбласти

#КонецЕсли