
&AtClient
Procedure Выгрузить(Command)
	
    Табдок = Новый ТабличныйДокумент;
	
	ВывестиСписокНаСервере(Табдок);
	
	Диалог = Новый ДиалогВыбораФайла(РежимДиалогаВыбораФайла.Сохранение);
	Диалог.Заголовок = "Выбор файла для сохранения";	
	Диалог.Фильтр 	 = "Книга MS Excel (*.xlsx;*.xls)|*.xlsx;*.xls";
	ФайлВыбран 		 = Диалог.Выбрать();
	
	ДопПараметры = Новый Структура;
	ДопПараметры.Insert("РезультатОтчета", Табдок);
	ДопПараметры.Insert("Диалог", Диалог);
	
	ПриЗавершенииДиалогаВыбораФайла(Диалог.ВыбранныеФайлы, ДопПараметры);
	
EndProcedure

&НаКлиенте
Процедура ПриЗавершенииДиалогаВыбораФайла(ВыбранныеФайлы, ДополнительныеПараметры) Экспорт
	
	Если ВыбранныеФайлы = Неопределено Тогда
		Сообщить("Необходимо выбрать файл для записи! Выгрузка не выполнена.");
		Возврат;
	КонецЕсли;
	
	ЗаголовокТаблицы = "Выгрузка данных по Организации";
	
	ПолноеИмяФайла = ВыбранныеФайлы[0];
	
	Расширение = Сред(ПолноеИмяФайла, СтрНайти(ПолноеИмяФайла, ".", НаправлениеПоиска.СКонца)+1, 10);
	
	ТипФайла = ТипФайлаТабличногоДокумента[ВРЕГ(Расширение)];
	
	Если Не ПустаяСтрока(ПолноеИмяФайла) Тогда
		
		ТабличныйДокумент = ДополнительныеПараметры.РезультатОтчета;

		ТабличныйДокумент.Записать(ПолноеИмяФайла, ТипФайла);
		
		Сообщить("Данные выгружены в файл: "+ПолноеИмяФайла);
		
	Иначе
		
		Сообщить("Необходимо выбрать файл для записи таб.документа! Выгрузка не выполнена.");
		
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ВывестиСписокНаСервере(ТабличныйДокумент)

	СКД = РеквизитФормыВЗначение("Report").ПолучитьМакет("MainDataCompositionSchema"); 
	Настройки = СКД.НастройкиПоУмолчанию;
	
	
	Расшифровка = Новый ДанныеРасшифровкиКомпоновкиДанных;
	КомпоновщикМакета = Новый КомпоновщикМакетаКомпоновкиДанных;  
			
    //Передаем в макет компоновки схему, настройки и данные расшифровки 
	ПараметрПлощадка = Настройки.ПараметрыДанных.Элементы.Найти("qHotel");//СКД.Параметры.Найти("qHotel");
	ПараметрПлощадка.Значение = Справочники.Hotels.НайтиПоКоду("001");
	ПараметрПлощадка.Использование = Истина;
	
	ПараметрСтатусРазмещения = Настройки.ПараметрыДанных.Элементы.Найти("AccommodationStatus");//СКД.Параметры.Найти("AccommodationStatus");
	ПараметрСтатусРазмещения.Значение = Справочники.AccommodationStatuses.НайтиПоКоду("10");
	ПараметрПлощадка.использование = Истина;
	
    МакетКомпоновки = КомпоновщикМакета.Выполнить(СКД, Настройки, Расшифровка);    
    ВнешниеПараметры = Новый Структура;    
	
    //Выполним компоновку с помощью процессора компоновки
    ПроцессорКомпоновкиДанных = Новый ПроцессорКомпоновкиДанных;
    ПроцессорКомпоновкиДанных.Инициализировать(МакетКомпоновки, ВнешниеПараметры, Расшифровка);    
	
    //Выводим результат в табличный документ
    ПроцессорВывода = Новый ПроцессорВыводаРезультатаКомпоновкиДанныхВТабличныйДокумент;
    ПроцессорВывода.УстановитьДокумент(ТабличныйДокумент);    
    ПроцессорВывода.Вывести(ПроцессорКомпоновкиДанных, Истина);
	
КонецПроцедуры

