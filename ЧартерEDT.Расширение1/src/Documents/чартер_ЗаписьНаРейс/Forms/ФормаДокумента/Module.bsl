#Область ОбработчикиСобытийФормы

&НаКлиенте
Процедура ПриЗакрытии(ЗавершениеРаботы)
	
	Оповестить("ИзмененияСпискаРегистрации");	
	
КонецПроцедуры

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Параметры.Ключ.Пустая() ИЛИ Объект.СтатусНаРейсе = Перечисления.чартер_СтатусыНаРейсе.ПустаяСсылка() Тогда
		
		Объект.СтатусНаРейсе = Перечисления.чартер_СтатусыНаРейсе.ЗаписанНаРейс;
		Если НЕ ЗначениеЗаполнено(Параметры.CopyingValue.Рейс) Тогда
			Объект.Рейс = Параметры.ChoiceParameters.Рейс;
		КонецЕсли;
				
	КонецЕсли;
	
	Объект.Исполнитель 	 = SessionParameters.CurrentUser;
	Объект.ДатаИзменения = ТекущаяДатаСеанса();
	
	УстановитьВидимостьЭлементовНаСервере();
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ВыбратьСотрудника(Команда)
	
	ПараметрыОткрытияФормы = Новый Структура; 
	ПараметрыОткрытияФормы.Вставить("РежимВыбора", Истина);
	ПараметрыОткрытияФормы.Вставить("МножественныйВыбор", Ложь);
	
    ОбработкаВыбора = Новый ОписаниеОповещения("ДобавитьСотрудникаЗакрытие", ЭтотОбъект, Новый Структура);
	ОткрытьФорму("Справочник.чартер_Сотрудники.ФормаВыбора", ПараметрыОткрытияФормы, ЭтотОбъект, , , , ОбработкаВыбора
													, РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);	
	
КонецПроцедуры 

&НаКлиенте
Процедура ПодобратьМесто(Команда)
	
	Если чартеры_ОбщиеПроцедурыИФункцииСервер.ПолучитьКомпоновкуСалона(объект.Рейс) 
			= ПредопределенноеЗначение("Перечисление.чартер_ТипВСРассадка.ПустаяСсылка") Тогда		
			
		чартеры_ОбщиеПроцедурыИФункцииСервер.СообщитьПользователю("Выбор места не возможен! 
																	|Для этого рейса не задана компановка салона");		
		Возврат;
		
	Иначе	
		СтруктураКоманда = Новый Структура("Команда", Команда);
		ОбработчикМестоСотрудникаЗакрытие = Новый ОписаниеОповещения("ЗабронироватьМестоСотрудникаЗакрытие", 
																	ЭтотОбъект, СтруктураКоманда);
	
		ПараметрыФормы = Новый Структура;
		ПараметрыФормы.Вставить("Организация", Объект.Организация); 
		ПараметрыФормы.Вставить("Рейс", Объект.Рейс); 
		ПараметрыФормы.Вставить("Место", Объект.Место); 
		ПараметрыФормы.Вставить("Сотрудник", Объект.Сотрудник);
		ПараметрыФормы.Вставить("Должность", Объект.Должность);		
		
		ОткрытьФорму("Документ.чартер_ЗаписьНаРейс.Форма.ФормаПодбораМеста", ПараметрыФормы, ЭтотОбъект, , ,
							, ОбработчикМестоСотрудникаЗакрытие, РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
	КонецЕсли;
		
КонецПроцедуры

&НаКлиенте
Процедура АннулироватьБронь(Команда)
	
	ОбработчикВопроса = Новый ОписаниеОповещения("ПродолжитьВыполнениеПослеОтветаНаВопросАннулировать", ЭтотОбъект);		
	ПоказатьВопрос(ОбработчикВопроса, "Аннулировать бронирование места для выбранного сотрудника?"
																			, РежимДиалогаВопрос.ДаНет); 
	
КонецПроцедуры

&НаКлиенте
Процедура РаспечататьБилет(Команда)
	
	Если Объект.Место = Неопределено Тогда
		чартер_ОбщиеПроцедурыИфункцииКлиент.СообщитьПользователю("На данный рейс у сотрудника нет брони!");
		Возврат;
	ИначеЕсли Модифицированность Тогда
		чартер_ОбщиеПроцедурыИфункцииКлиент.СообщитьПользователю("Для печати пасадочного талона нужно записать 
																										|изменения.");
		Возврат;	
	Иначе
		СтруктураПосадочногоТалона = Новый Структура;
		СтруктураПосадочногоТалона.Вставить("Рейс", Объект.Рейс);
		СтруктураПосадочногоТалона.Вставить("Сотрудник", Объект.Сотрудник);
		СтруктураПосадочногоТалона.Вставить("Место", Объект.Место);
		
		ВыгрузитьДанныеБронированияНаСервере(ШаблонБилета, СтруктураПосадочногоТалона);		
	
		ПараметрыПечатнойФормы = Новый Структура("ТабличныйДокумент", ШаблонБилета);
		ПараметрыПечатнойФормы.Вставить("Заголовок", "Приложение к посадочному талону на рейс: " +  Объект.Рейс);        	
		ОткрытьФорму("ОбщаяФорма.чартер_ПросмотрПечатнойФормы", ПараметрыПечатнойФормы, ЭтотОбъект, , , ,
																	, РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
	КонецЕсли;

КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура ВыгрузитьДанныеБронированияНаСервере(ШаблонБилета, СтруктураПосадочногоТалона)   
	
	Документы.чартер_ЗаписьНаРейс.СформироватьБилетНаРейсДляСотрудника(ШаблонБилета, СтруктураПосадочногоТалона);
	
КонецПроцедуры

&НаКлиенте
Процедура ЗабронироватьМестоСотрудникаЗакрытие(Значение, ДопПараметры) Экспорт

	Если Значение = Неопределено Тогда  
        Возврат;
	КонецЕсли;      
		
	Объект.Место = Значение.Место;	
	Модифицированность = Истина;
				
КонецПроцедуры

&НаКлиенте
Процедура ДобавитьСотрудникаЗакрытие(Значение, ДопПараметры) Экспорт

    Если Значение = Неопределено Тогда  
        Возврат;
	КонецЕсли;      
	
	ЗаполнитьДанныеСотрудника(Значение);
				
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьДанныеСотрудника(Сотрудник)
		
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	чартер_Сотрудники.Ссылка КАК Сотрудник,
	               |	чартер_Сотрудники.Наименование КАК Наименование,
	               |	чартер_Сотрудники.ФИОАнглийское КАК ФИОАнглийское,
	               |	чартер_Сотрудники.Организация КАК Организация,
	               |	чартер_Сотрудники.ТабельныйНомер КАК ТабельныйНомер,
	               |	чартер_Сотрудники.Должность КАК Должность,
	               |	чартер_Сотрудники.Подразделение КАК Подразделение,
	               |	чартер_Сотрудники.Телефон КАК Телефон
	               |ИЗ
	               |	Справочник.чартер_Сотрудники КАК чартер_Сотрудники
	               |ГДЕ
	               |	чартер_Сотрудники.Ссылка = &Ссылка";
	
	Запрос.УстановитьПараметр("Ссылка", Сотрудник);	
	
	РезультатЗапроса = Запрос.Выполнить().Выбрать();
	Пока РезультатЗапроса.Следующий() Цикл    
    		
		Объект.Сотрудник 	  = РезультатЗапроса.Сотрудник;
		Объект.Организация 	  = РезультатЗапроса.Организация;
	    Объект.ТабельныйНомер = РезультатЗапроса.ТабельныйНомер;
		Объект.ФИО 			  = РезультатЗапроса.Наименование;
		Объект.ФИОАнглийское  = РезультатЗапроса.ФИОАнглийское;
		Объект.Должность 	  = РезультатЗапроса.Должность;	
		Объект.Подразделение  = РезультатЗапроса.Подразделение;
		Объект.НомерТелефона  = РезультатЗапроса.Телефон;		
		
	КонецЦикла;
	
	Модифицированность = Истина;
	
КонецПроцедуры 

&НаСервере
Процедура УстановитьВидимостьЭлементовНаСервере()
	
	Если Не Параметры.Ключ.Пустая() Тогда
		Элементы.Рейс.Доступность = Ложь;
	КонецЕсли;
	
	Элементы.СтатусНаРейсе.ЦветТекста = ПолучитьЦветСтатуса();
	
КонецПроцедуры	

&НаСервере
Функция ПолучитьЦветСтатуса()

	Если Объект.СтатусНаРейсе = Перечисления.чартер_СтатусыНаРейсе.ЗаписанНаРейс Тогда
		Возврат WebЦвета.Зеленый;
	ИначеЕсли Объект.СтатусНаРейсе = Перечисления.чартер_СтатусыНаРейсе.ЗаписьУдалена Тогда	
		Возврат WebЦвета.Красный;			
	КонецЕсли;
	
КонецФункции

&НаКлиенте
Процедура ПродолжитьВыполнениеПослеОтветаНаВопросАннулировать(Результат, Параметры) Экспорт

    Если Результат = КодВозвратаДиалога.Нет Тогда
        Возврат;
	КонецЕсли;
	
	Если НЕ Объект.Место = Неопределено Тогда
		АннулироватьБроньМеста();
	Иначе
		чартеры_ОбщиеПроцедурыИФункцииСервер.СообщитьПользователю("За данным сотрудником нет активной брони!");
	КонецЕсли;
		
	Оповестить("ИзмененияСпискаРегистрации");	
	Закрыть();
	
КонецПроцедуры

&НаСервере
Процедура АннулироватьБроньМеста()

	ОбъектСотрудник = Объект.Ссылка.ПолучитьОбъект();
	ОбъектСотрудник.место = Справочники.чартер_ПосадочныеМестаНаРейс.ПустаяСсылка();
	ОбъектСотрудник.Записать(РежимЗаписиДокумента.Проведение);
	
КонецПроцедуры	
	
#КонецОбласти