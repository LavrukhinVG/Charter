#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	ЗаполнитьЗначенияСвойств(Объект, Параметры);		
	
	СхемаРассадки.Очистить(); 
	МакетРассадки = ПолучитьМакетРассадки();
	ОбластьБизнесКласс = чартеры_ОбщиеПроцедурыИФункцииСервер.ЭтоАктуальнаяБроньНаРейс(Объект.Рейс, МакетРассадки
																									, "ПосадочныеМеста");
	СхемаРассадки.Вывести(ОбластьБизнесКласс);
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура Забронировать(Команда)
	
	ПараметрыБронирования = Новый Структура("Место", Объект.Место);
	ОповеститьОВыборе(ПараметрыБронирования);
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Procedure СхемаРассадкиТДOnActivateArea(Item)

	ВыделенныеДанные = СхемаРассадки.SelectedAreas[0].Text;  
		
	Если НЕ ВыделенныеДанные = "" Тогда
				
		МестоСотрудника = ПолучитьМестоДляСотрудника(ВыделенныеДанные);
		Если МестоСотрудника = Неопределено Тогда
			чартер_ОбщиеПроцедурыИфункцииКлиент.СообщитьПользователю("Выбранного места нет в справочнике, 
			|																		необходимо завести его карточку.");
			Возврат;
		Иначе	
			Если МестоСотрудника.ИнфоАктивно Тогда			
				СтрокаСообщения = Новый ФорматированнаяСтрока(МестоСотрудника.ИнфоСообщение);
				ОписаниеОповещения = Новый ОписаниеОповещения("ПредупреждениеЗавершение", ЭтотОбъект);
				ПоказатьПредупреждение(ОписаниеОповещения, СтрокаСообщения);
			КонецЕсли;
		
			ЭтоМестоСвободно = ПроверитьДоступностьБрони(МестоСотрудника.НомерМеста);
			Если ЭтоМестоСвободно Тогда
				Объект.Место = МестоСотрудника.НомерМеста;
				ОбновитьРассадку(ВыделенныеДанные);
			Иначе
				чартеры_ОбщиеПроцедурыИФункцииСервер.СообщитьПользователю("Выбранное место не доступно для брони!");				
			КонецЕсли;			
		КонецЕсли;
		
	КонецЕсли;   

EndProcedure     

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаКлиенте
Процедура ПредупреждениеЗавершение(Параметры) Экспорт
	
КонецПроцедуры 

&НаСервере
Функция ПолучитьМакетРассадки()
	
	Возврат чартеры_ОбщиеПроцедурыИФункцииСервер.ПолучитьМакетРассадки(Объект.рейс);
		
КонецФункции

&НаСервере
Функция ПолучитьМестоДляСотрудника(ВыделенныеДанные)
	
	КомпоновкаРейса = ПолучитьКомпоновкуРейса();
	Возврат Справочники.чартер_ПосадочныеМестаНаРейс.ПолучитьПосадочноеМесто(ВыделенныеДанные, КомпоновкаРейса);
	
КонецФункции

&НаСервере
Функция ПолучитьКомпоновкуРейса()
	
	Возврат Справочники.чартер_Рейсы.ПолучитьКомпоновкуРейса(Объект.Рейс);
	
КонецФункции

&НаСервере
Процедура ОбновитьРассадку(ЗабронированноеМесто)

	СхемаРассадки.Очистить();  	
	
	МакетРассадки = ПолучитьМакетРассадки();
	ОбластьБизнесКласс = чартеры_ОбщиеПроцедурыИФункцииСервер.ЭтоАктуальнаяБроньНаРейс(Объект.Рейс, МакетРассадки
																								, "ПосадочныеМеста");	
    	
	БронируемоеМесто = ОбластьБизнесКласс.НайтиТекст(ЗабронированноеМесто);
	Если БронируемоеМесто.Text = ЗабронированноеМесто Тогда
		ОбластьБизнесКласс.Область(БронируемоеМесто.Name).BackColor = WebЦвета.Лосось;
	КонецЕсли;	
		
	СхемаРассадки.Вывести(ОбластьБизнесКласс);
		
КонецПроцедуры 

&НаСервере
Функция ПроверитьДоступностьБрони(МестоСотрудника)

	Возврат чартеры_ОбщиеПроцедурыИФункцииСервер.ПроверитьДоступностьБрони(Объект.Рейс, МестоСотрудника);
	
КонецФункции

&НаСервере
Функция ЭтоЗабронированныеМеста()
	
	Возврат чартеры_ОбщиеПроцедурыИФункцииСервер.ЭтоЗабронированныеМеста(Объект.Рейс);	
	
КонецФункции

#КонецОбласти
