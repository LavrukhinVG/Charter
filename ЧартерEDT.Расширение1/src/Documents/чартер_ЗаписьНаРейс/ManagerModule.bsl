#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

// Выгрузка списка записанных на борт сотрудников для сопоставления данных из ЗУП
//
// Параметры:
//	ТабличныйДокумент - ТабличныйДокумент
//	Рейс			  - СправочникСсылка.чартер_Рейсы
// 
Процедура ВыгрузитьЗаписьНаРейс(ТабличныйДокумент, Рейс) Экспорт
	
	ТабличныйДокумент.Очистить();

	Макет = ПолучитьМакет("ПФ_MXL_Список");	
	
	ОбластьШапка = Макет.ПолучитьОбласть("Шапка");
	ОбластьСтрока = Макет.ПолучитьОбласть("Строка");
	
	ТабличныйДокумент.Вывести(ОбластьШапка);
	
	Запрос = Новый Запрос;
	Запрос.Текст = ПолучитьТекстЗапросаВыгрузкиСписка();
	
	Запрос.УстановитьПараметр("Рейс", Рейс);
	
	РезультатЗапроса = Запрос.Выполнить();
	Выборка = РезультатЗапроса.Выбрать();
	Пока Выборка.Следующий() Цикл
		
		ЗаполнитьЗначенияСвойств(ОбластьСтрока.Параметры, Выборка);
		ТабличныйДокумент.Вывести(ОбластьСтрока);
		
	КонецЦикла;
		
КонецПроцедуры

// Формирование посадочного талона в зависимости от выбранного класса
//
// Параметры:
// 	ШаблонБилета - ТабличныйДокумент
// 	СтруктураПосадочногоТалона - Структура - Выбранное место, Тип кампановкиВС.
//
Процедура СформироватьБилетНаРейсДляСотрудника(ШаблонБилета, СтруктураПосадочногоТалона) Экспорт
	
	ШаблонБилета.Очистить();                             
	
	КлассМестаВС = Справочники.чартер_ПосадочныеМестаНаРейс.ПоолучитьКлассМестаВС(СтруктураПосадочногоТалона.Место
																				, СтруктураПосадочногоТалона.Рейс.ТипВС);
	Макет = ПолучитьОбщийМакет(ПолучитьШаблонПосадочногоТалона(КлассМестаВС));
	
	Если НЕ Макет = Неопределено Тогда

		ОбластьДанных = Макет.ПолучитьОбласть("Билет");
	
		Запрос = Новый Запрос;
		Запрос.Текст = ПолучитьТестЗапросаПосадочногоТалона();
		Запрос.УстановитьПараметр("Рейс", СтруктураПосадочногоТалона.Рейс);
		Запрос.УстановитьПараметр("Сотрудник", СтруктураПосадочногоТалона.Сотрудник);
		
		РезультатЗапроса = Запрос.Выполнить();
		Выборка = РезультатЗапроса.Выбрать();
		Пока Выборка.Следующий() Цикл

			ЗаполнитьЗначенияСвойств(ОбластьДанных.Параметры, Выборка);
			
		КонецЦикла;
		
		ШаблонБилета.Вывести(ОбластьДанных);
	Иначе
		чартеры_ОбщиеПроцедурыИФункцииСервер.СообщитьПользователю("Не удалось получить данные для формирования билета."); 

	КонецЕсли;
		
КонецПроцедуры

// Получить количество пассажиров на рейсе.
// 
// Параметры:
//  Рейс - СправочникСсылка
// 
// Возвращаемое значение:
//  Число - Число 
//
Функция ПолучитьКоличествоПассажировНаРейсе(Рейс) Экспорт
	
	Результат = 0;
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
					"ВЫБРАТЬ
					|	КОЛИЧЕСТВО(чартер_ЗаписьНаРейс.Ссылка) КАК КоличествоПассажиров
					|ИЗ
					|	Документ.чартер_ЗаписьНаРейс КАК чартер_ЗаписьНаРейс
					|ГДЕ
					|	чартер_ЗаписьНаРейс.Проведен
					|	И НЕ чартер_ЗаписьНаРейс.ПометкаУдаления
					|	И чартер_ЗаписьНаРейс.Рейс = &Рейс
					|	И чартер_ЗаписьНаРейс.СтатусНаРейсе = ЗНАЧЕНИЕ(Перечисление.чартер_СтатусыНаРейсе.ЗаписанНаРейс)";
	
	Запрос.УстановитьПараметр("Рейс", Рейс);
	РезультатЗапроса = Запрос.Выполнить();
	
	Если РезультатЗапроса.Пустой() Тогда
		Возврат Результат;
	Иначе
		Выборка = РезультатЗапроса.Выбрать();
	    Выборка.Следующий();
	    Возврат Выборка.КоличествоПассажиров; 
	КонецЕсли;
	
КонецФункции

#КонецОбласти  

#Область СлужебныеПроцедурыИФункции

Функция ПолучитьТекстЗапросаВыгрузкиСписка()

	ТекстЗапроса = "ВЫБРАТЬ
					|	АВТОНОМЕРЗАПИСИ() КАК НомерСтроки,
					|	чартер_ЗаписьНаРейс.Организация.Представление КАК ОрганизацияПредставление,
					|	чартер_ЗаписьНаРейс.ТабельныйНомер КАК ТабельныйНомер,
					|	чартер_ЗаписьНаРейс.ФИО КАК ФИО,
					|	чартер_ЗаписьНаРейс.Должность КАК Должность,
					|	чартер_ЗаписьНаРейс.Подразделение КАК Подразделение,
					|	чартер_ЗаписьНаРейс.ПричиныВылета КАК ПричиныВылета,
					|	чартер_ЗаписьНаРейс.SLIP КАК SLIP,
					|	чартер_ЗаписьНаРейс.НомерТелефона КАК НомерТелефона,
					|	чартер_ЗаписьНаРейс.Комментарий КАК Комментарий,
					|	чартер_ЗаписьНаРейс.ВКакойНОТеЗаявлены КАК ВКакойНОТеЗаявлены,
					|	чартер_ЗаписьНаРейс.Исполнитель КАК Исполнитель,
					|	чартер_ЗаписьНаРейс.ДатаИзменения КАК ДатаИзменения
					|ПОМЕСТИТЬ втИсходныеДанные
					|ИЗ
					|	Документ.чартер_ЗаписьНаРейс КАК чартер_ЗаписьНаРейс
					|ГДЕ
					|	чартер_ЗаписьНаРейс.Рейс = &Рейс
					|	И чартер_ЗаписьНаРейс.Проведен
					|	И НЕ чартер_ЗаписьНаРейс.ПометкаУдаления
					|	И чартер_ЗаписьНаРейс.СтатусНаРейсе = ЗНАЧЕНИЕ(Перечисление.чартер_СтатусыНаРейсе.ЗаписанНаРейс)
					|;
					|
					|////////////////////////////////////////////////////////////////////////////////
					|ВЫБРАТЬ
					|	втИсходныеДанные.НомерСтроки КАК НомерСтроки,
					|	втИсходныеДанные.ОрганизацияПредставление КАК Организация,
					|	втИсходныеДанные.ТабельныйНомер КАК ТабельныйНомер,
					|	втИсходныеДанные.ФИО КАК ФИО,
					|	втИсходныеДанные.Должность КАК Должность,
					|	втИсходныеДанные.Подразделение КАК Отдел,
					|	втИсходныеДанные.ПричиныВылета КАК ПричиныВылета,
					|	втИсходныеДанные.SLIP КАК SLIP,
					|	втИсходныеДанные.НомерТелефона КАК НомерТелефона,
					|	втИсходныеДанные.Комментарий КАК Комментарий,
					|	втИсходныеДанные.ВКакойНОТеЗаявлены КАК ВКакойНОТеЗаявлены,
					|	втИсходныеДанные.Исполнитель КАК Исполнитель,
					|	втИсходныеДанные.ДатаИзменения КАК ДатаИзменения
					|ИЗ
					|	втИсходныеДанные КАК втИсходныеДанные";
	
	Возврат ТекстЗапроса;
	
КонецФункции	

Функция ПолучитьТестЗапросаПосадочногоТалона()
	
	ТекстЗапроса = "ВЫБРАТЬ
	               |	чартер_ЗаписьНаРейс.Организация КАК Организация,
	               |	чартер_ЗаписьНаРейс.ФИО КАК ФИО,
	               |	чартер_ЗаписьНаРейс.ФИОАнглийское КАК ФИОАнглийское,
	               |	чартер_ЗаписьНаРейс.Место КАК Место,
	               |	чартер_ЗаписьНаРейс.Рейс КАК Рейс,
	               |	чартер_ЗаписьНаРейс.ДополнительныйБагаж КАК ДополнительныйБагаж
	               |ПОМЕСТИТЬ втРегистацияСотрудника
	               |ИЗ
	               |	РегистрСведений.чартер_ЗаписьНаРейс КАК чартер_ЗаписьНаРейс
	               |ГДЕ
	               |	чартер_ЗаписьНаРейс.Рейс = &Рейс
	               |	И чартер_ЗаписьНаРейс.Сотрудник = &Сотрудник
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	чартер_Рейсы.Наименование КАК Наименование,
	               |	чартер_Рейсы.ДатаРейса КАК ДатаРейса,
	               |	чартер_Рейсы.МаршрутПерелета КАК МаршрутПерелета,
	               |	СТРОКА(чартер_Рейсы.Багаж) + "" кг"" КАК Багаж,
	               |	чартер_Рейсы.Ссылка КАК Ссылка
	               |ПОМЕСТИТЬ втРейс
	               |ИЗ
	               |	Справочник.чартер_Рейсы КАК чартер_Рейсы
	               |ГДЕ
	               |	чартер_Рейсы.Ссылка = &Рейс
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	втРегистацияСоттрудника.Организация.Представление КАК Организация,
	               |	втРегистацияСоттрудника.ФИО КАК ФИО,
	               |	втРегистацияСоттрудника.ФИОАнглийское КАК ФИОАнглийское,
	               |	втРейс.ДатаРейса КАК ДатаРейса,
	               |	втРейс.МаршрутПерелета.Представление КАК Маршрут,
	               |	ВЫБОР
	               |		КОГДА втРегистацияСоттрудника.ДополнительныйБагаж
	               |			ТОГДА втРейс.Багаж + "" х 2""
	               |		ИНАЧЕ втРейс.Багаж
	               |	КОНЕЦ КАК Багаж,
	               |	втРегистацияСоттрудника.Место.Представление КАК Место,
	               |	втРейс.Наименование КАК НомерРейса,
	               |	втРегистацияСоттрудника.ДополнительныйБагаж КАК ДополнительныйБагаж
	               |ИЗ
	               |	втРегистацияСотрудника КАК втРегистацияСоттрудника
	               |		ПОЛНОЕ СОЕДИНЕНИЕ втРейс КАК втРейс
	               |		ПО втРегистацияСоттрудника.Рейс = втРейс.Ссылка";
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ПолучитьШаблонПосадочногоТалона(Класс)
	
	Результат = Неопределено;
	
    Если Класс = Перечисления.чартер_КлассыМестВС.БизнесКласс Тогда
		Результат = "чартер_БилетБизнесКласс";
	ИначеЕсли Класс = Перечисления.чартер_КлассыМестВС.ЭкономическийКлассУлучшенный Тогда	
		Результат = "чартер_КомфортКласс";
	ИначеЕсли Класс = Перечисления.чартер_КлассыМестВС.ЭкономическийКласс Тогда	
		Результат = "чартер_ЭкономКласс";
    Иначе
    	Результат = Неопределено;
	КонецЕсли;
	
	Возврат Результат;
	
КонецФункции

#КонецОбласти

#КонецЕсли