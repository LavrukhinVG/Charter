
#Область ОбработчикиСобытийФормы

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	ОткрытьВыборРейса();
	
КонецПроцедуры 

#КонецОбласти 


#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура ДиаграммаРассадкиПриАктивизации(Элемент)

	ВыделенныеДанные = СхемаРассадки.SelectedAreas[0].Text;
	
	Если НЕ ВыделенныеДанные = "" Тогда
		
		МестоСотрудника = ПолучитьМестоДляСотрудника(ВыделенныеДанные);
		Если МестоСотрудника = Неопределено Тогда
			чартер_ОбщиеПроцедурыИфункцииКлиент.СообщитьПользователю("Выбранного места нет в справочнике, 
																			|необходимо завести его карточку.");
			Возврат;
		Иначе	
		
		ИнформацияПоБрони = чартеры_ОбщиеПроцедурыИФункцииСервер.ПолучитьИнформациюПоБрони(ОтборВыбранныйРейс
																									, МестоСотрудника);
		СтрокаСообщения = Новый ФорматированнаяСтрока(ИнформацияПоБрони.ФИО);
		ОписаниеОповещения = Новый ОписаниеОповещения("Информация", ЭтотОбъект);
		ПоказатьПредупреждение(ОписаниеОповещения, СтрокаСообщения);
		
		КонецЕсли;
		
	КонецЕсли;		

КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ВыбратьРейс(Команда)
	
    ОткрытьВыборРейса();
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Функция ПолучитьКомпоновкуРейса()
	
	Возврат Справочники.чартер_Рейсы.ПолучитьКомпоновкуРейса(Объект.Рейс);
	
КонецФункции

&НаКлиенте
Процедура ОткрытьВыборРейса()

	ПараметрыФормыВыбора = Новый Структура;
	ПараметрыФормыВыбора.Вставить("РежимОткрытияОкна",  РежимОткрытияОкнаФормы.БлокироватьВесьИнтерфейс);
	ПараметрыФормыВыбора.Вставить("РежимВыбора",        Истина);
	ПараметрыФормыВыбора.Вставить("МножественныйВыбор", Ложь);
	
	ДопПараметры = Новый Структура("ИмяРеквизита", "ОтборВыбранныйРейс");
	ДопПараметры.Вставить("ЛевоеЗначение", "Рейс");
	
	Оповещение = Новый ОписаниеОповещения("ОкончаниеВыбора", ЭтотОбъект, ДопПараметры);
	ОткрытьФорму("Справочник.чартер_Рейсы.ФормаВыбора", ПараметрыФормыВыбора, Элементы.ОтборВыбранныйРейс, , ,
					, Оповещение, РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);   
	
КонецПроцедуры

&НаКлиенте
Процедура ОкончаниеВыбора(Результат, ДопПараметры) Экспорт
	
	ИмяОтбора = ДопПараметры.ЛевоеЗначение;
	
	Если ДопПараметры.Свойство("ВидСравнения") Тогда
		ВидСравненияОтбора = ДопПараметры.ВидСравнения;
	Иначе
		ВидСравненияОтбора = ВидСравненияКомпоновкиДанных.Равно;
	КонецЕсли;
	
	Использование = ЗначениеЗаполнено(Результат);
	
	Изменено = Ложь;
	
	Для каждого СтрокаОтбора Из СписокЗарегистрированных.Отбор.Элементы Цикл
		
		Если СокрЛП(СтрокаОтбора.ЛевоеЗначение) = ИмяОтбора Тогда
			
			СтрокаОтбора.ПравоеЗначение = Результат;
			СтрокаОтбора.ВидСравнения = ВидСравненияОтбора;
			СтрокаОтбора.Использование = Использование;
			
			Изменено = Истина;
						
		КонецЕсли;	
			
	КонецЦикла;
	
	Если Не Изменено Тогда
		
		ЭлементОтбораДанных = СписокЗарегистрированных.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
		ЭлементОтбораДанных.ЛевоеЗначение = Новый ПолеКомпоновкиДанных(ИмяОтбора);
		ЭлементОтбораДанных.ВидСравнения = ВидСравненияОтбора;
		ЭлементОтбораДанных.ПравоеЗначение = Результат;
		ЭлементОтбораДанных.Использование = Использование;
		
	КонецЕсли;
	
	Если Результат <> Неопределено И ДопПараметры.Свойство("ИмяРеквизита") Тогда
		
		Попытка
			
			ИмяРеквизита = ДопПараметры.ИмяРеквизита;			
			Если ТипЗнч(Результат) = Тип("Массив") Тогда
				ЭтотОбъект[ИмяРеквизита].ЗагрузитьЗначения(Результат);
			Иначе
				ЭтотОбъект[ИмяРеквизита] = Результат;
			КонецЕсли;
			
		Исключение
			чартеры_ОбщиеПроцедурыИФункцииСервер.СообщитьПользователю("Не удалось загрузить значение.");
		КонецПопытки;
		
	КонецЕсли;
	
	Если ЗначениеЗаполнено(ОтборВыбранныйРейс) Тогда
		ОбновитьСхемуРассадки(Результат);
	КонецЕсли;

КонецПроцедуры

&НаСервере
Процедура ОбновитьСхемуРассадки(Результат)
	
	ДоступностьРейса = ПолучитьДоступностьРейса(Результат);
	
	Если Не ДоступностьРейса = Неопределено Тогда
		Доступность = ДоступностьРейса;
	Иначе		
		чартеры_ОбщиеПроцедурыИФункцииСервер.СообщитьПользователю("Не выбран рейс!");
		Доступность = Ложь;
	КонецЕсли;
	
	СхемаРассадки.Очистить(); 
	МакетРассадки = ПолучитьМакетРассадки();
	ОбластьРассадки = чартеры_ОбщиеПроцедурыИФункцииСервер.ЭтоАктуальнаяБроньНаРейс(ОтборВыбранныйРейс
																			, МакетРассадки, "ПосадочныеМеста");
	///РасшифровкаБронь = чартеры_ОбщиеПроцедурыИФункцииСервер.ПолучитьИнформациюПоБрони(ОтборВыбранныйРейс, );
	//ОбластьРассадки.Параметры.Бронь = 																		
	СхемаРассадки.Вывести(ОбластьРассадки);
	
КонецПроцедуры

&НаСервере
Функция ПолучитьДоступностьРейса(Рейс)

	Возврат Справочники.чартер_Рейсы.ДоступностьРейса(Рейс); 
	
КонецФункции

&НаСервере
Функция ПолучитьМестоДляСотрудника(ВыделенныеДанные)
	
	КомпоновкаРейса = ПолучитьКомпоновкуРейса();
	Возврат Справочники.чартер_ПосадочныеМестаНаРейс.ПолучитьПосадочноеМесто(ВыделенныеДанные, КомпоновкаРейса);
	
КонецФункции

&НаСервере
Функция ПолучитьМакетРассадки()
	
	Возврат чартеры_ОбщиеПроцедурыИФункцииСервер.ПолучитьМакетРассадки(ОтборВыбранныйРейс);
	
КонецФункции

#КонецОбласти
