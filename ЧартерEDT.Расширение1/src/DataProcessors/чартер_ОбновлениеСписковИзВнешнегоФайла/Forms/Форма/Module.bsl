#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Параметры.Свойство("Рейс") Тогда
		Объект.Рейс = Параметры.Рейс;    						
	КонецЕсли;	                     		
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ПрочитатьДанныеИзФайла(Команда)
	
	Диалог = Новый ДиалогВыбораФайла(РежимДиалогаВыбораФайла.Открытие);
	Диалог.Заголовок = "Выбор файла для загрузки";	
	Диалог.Фильтр 	 = "Книга MS Excel (*.xlsx;*.xls)|*.xlsx;*.xls";
	ФайлВыбран 		 = Диалог.Выбрать(); 	
	ЗагрузитьДанныеЗавершение(Диалог.ВыбранныеФайлы, Новый Структура("Диалог", Диалог));		
	
КонецПроцедуры 

&НаКлиенте
Процедура СоздатьДокументыРегистрации(Команда)
	
	Если Не ЗначениеЗаполнено(Объект.Рейс) Тогда
		чартеры_ОбщиеПроцедурыИФункцииСервер.СообщитьПользователю("Не выбран рейс для регистрации!");		
		Возврат;
	КонецЕсли;
	
	Если Объект.ДанныеДляЗагрузки.Количество() = 0 Тогда
		чартеры_ОбщиеПроцедурыИФункцииСервер.СообщитьПользователю("Отсутствуют данные для создания документов!");
		Возврат;
	КонецЕсли;
	
	ДополнительныеПараметры = Новый Структура;
	
	ОбработчикВопроса = Новый ОписаниеОповещения("ПродолжитьВыполнениеПослеОтветаНаВопросСоздать", ЭтотОбъект, ДополнительныеПараметры);		
	ПоказатьВопрос(ОбработчикВопроса, "Создать документы регистрации для выбранных сорудников?", РежимДиалогаВопрос.ДаНет); 
	
КонецПроцедуры
	
#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаКлиенте
Процедура ЗагрузитьДанныеЗавершение(ВыбранныеФайлы, ДополнительныеПараметры)
		
	Если ВыбранныеФайлы = Неопределено Тогда
		Возврат;	
	КонецЕсли;
	
	Если ВыбранныеФайлы.Количество() = 1 Тогда
		ПутьКФайлу = ВыбранныеФайлы[0]; 
		
		Попытка					
			Если ПустаяСтрока(ПутьКФайлу) Тогда
				чартеры_ОбщиеПроцедурыИФункцииСервер.СообщитьПользователю("Выберите файл с данными!");
			Иначе				
				ЗагрузитьВХ(ПутьКФайлу)
			КонецЕсли;			
		Исключение
			Сообщить(ОписаниеОшибки());			
		КонецПопытки; 		
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура ЗагрузитьВХ(ПутьКФайлу)
	
	ДанныеФайла = Новый ДвоичныеДанные(ПутьКФайлу);
	АдресФайла = "";
	АдресФайла = ПоместитьВоВременноеХранилище(ДанныеФайла, УникальныйИдентификатор);				
	ЗагрузкаДанныхНаСервере(АдресФайла);								
		
	УдалитьФайлы(АдресФайла); 	
		
КонецПроцедуры

&НаСервере
Процедура ЗагрузкаДанныхНаСервере(АдресХранилища)
		
	Попытка                     
		ОбработкаОбъект = РеквизитФормыВЗначение("Объект");		
		ОбработкаОбъект.ВыгрузитьДанныеДляПредпросмотра(АдресХранилища);
		ЗначениеВРеквизитФормы(ОбработкаОбъект, "Объект");
	Исключение
		ОписаниеОшибки = ОписаниеОшибки();
		Если ЗначениеЗаполнено(ОписаниеОшибки) Тогда
			чартеры_ОбщиеПроцедурыИФункцииСервер.СообщитьПользователю(ОписаниеОшибки);	
		КонецЕсли; 		
	КонецПопытки;
	
	ОбработкаОбъект = Неопределено;
	
КонецПроцедуры 

&НаКлиенте
Процедура ПродолжитьВыполнениеПослеОтветаНаВопросСоздать(Результат, Параметры) Экспорт

    Если Результат = КодВозвратаДиалога.Нет Тогда
        Возврат;
	КонецЕсли;
	
	СоздатьДокументыРегистрацииНаРейс(Параметры);
	
	Оповестить("ИзмененияСпискаРегистрации");
	
	Закрыть();
	
КонецПроцедуры

&НаСервере
Процедура СоздатьДокументыРегистрацииНаРейс(Параметры) 
	
	СотрудникиДляРегистрации = ПолучитьСписокСотрудниковДляРегистрации();
	
	Если Не СотрудникиДляРегистрации = Неопределено  Тогда
		
		Для каждого Сотрудник Из СотрудникиДляРегистрации Цикл
			
			Попытка
				НоваяРегистрация = Документы.чартер_ЗаписьНаРейс.СоздатьДокумент();
				НоваяРегистрация.Дата = ТекущаяДатаСеанса();
				НоваяРегистрация.Организация = Сотрудник.Организация;
				НоваяРегистрация.Сотрудник = Сотрудник.СотрудникЗУП;
				НоваяРегистрация.ТабельныйНомер = Сотрудник.ТабельныйНомер;
				НоваяРегистрация.Должность = Сотрудник.Должность;
				НоваяРегистрация.ФИО = Сотрудник.ФИО;
				НоваяРегистрация.Рейс = Объект.Рейс;
				НоваяРегистрация.Подразделение = Сотрудник.Подразделение;
				НоваяРегистрация.СтатусНаРейсе = Перечисления.чартер_СтатусыНаРейсе.ЗаписанНаРейс;
				НоваяРегистрация.ПричиныВылета = Сотрудник.ПричиныВылета;
				НоваяРегистрация.SLIP = "";
				НоваяРегистрация.НомерТелефона = Сотрудник.НомерТелефона;
				НоваяРегистрация.Комментарий = "Загружен из файла";
				НоваяРегистрация.ВКакойНОТеЗаявлены = "";
				НоваяРегистрация.Исполнитель = SessionParameters.CurrentUser;
				НоваяРегистрация.ДатаИзменения = ТекущаяДатаСеанса();
				
				НоваяРегистрация.Записать(РежимЗаписиДокумента.Проведение);
			Исключение				
			    ТекстОшибки = ОписаниеОшибки(); 
				Сообщить(ТекстОшибки);	                                    
			КонецПопытки;
			
		КонецЦикла;	
		
		чартеры_ОбщиеПроцедурыИФункцииСервер.СообщитьПользователю("Сотрудники зарегистрированы на рейс.");
		
	КонецЕсли;
		
	Объект.ДанныеДляЗагрузки.Очистить();	
			
КонецПроцедуры

&НаСервере
Функция ПолучитьСписокСотрудниковДляРегистрации()
	
	Запрос = Новый Запрос;
	Запрос.Текст = ПолучитьТекстЗапросаСоданияРегистрацийСотрудников();

	Запрос.УстановитьПараметр("ДанныеИзФайла", Объект.ДанныеДляЗагрузки.Выгрузить());
	Запрос.УстановитьПараметр("Рейс", Объект.Рейс); 

	МассивРезультатов = Запрос.ВыполнитьПакет();
	
	// Выведем Лог дублей если есть
	Если Не МассивРезультатов[2].Пустой() Тогда
		
		ВыборкаДубли = МассивРезультатов[2].Выбрать();
		Пока ВыборкаДубли.Следующий() Цикл  
						
			ТекстСообщения = СтрШаблон("Сотрудник: %1, табельный номер: %2 - уже ранее зарегистрирован на рейс - %3!",
										ВыборкаДубли.ФИО, ВыборкаДубли.ТабельныйНомер, Объект.Рейс);			
			чартеры_ОбщиеПроцедурыИФункцииСервер.СообщитьПользователю(ТекстСообщения);
			
		КонецЦикла;	
		
	КонецЕсли;
	
	// вернем новых сотрудников для регистрации (без дублей регистрации)
	Возврат ?(МассивРезультатов[3].Пустой(), Неопределено, МассивРезультатов[3].Выгрузить());
	
КонецФункции 

&НаСервереБезКонтекста
Функция ПолучитьТекстЗапросаСоданияРегистрацийСотрудников()
	
	ТекстЗапроса = "ВЫБРАТЬ
	               |	ДанныеИзФайла.Организация КАК Организация,
	               |	ДанныеИзФайла.ТабельныйНомер КАК ТабельныйНомер,
	               |	ДанныеИзФайла.ФИО КАК ФИО,
	               |	ДанныеИзФайла.Должность КАК Должность,
	               |	ДанныеИзФайла.Подразделение КАК Подразделение,
	               |	ДанныеИзФайла.НомерТелефона КАК НомерТелефона,
	               |	ДанныеИзФайла.СотрудникЗУП КАК СотрудникЗУП,
	               |	ДанныеИзФайла.ПричиныВылета КАК ПричиныВылета
	               |ПОМЕСТИТЬ втДанныеИзФайла
	               |ИЗ
	               |	&ДанныеИзФайла КАК ДанныеИзФайла
	               |ГДЕ
	               |	ДанныеИзФайла.Загружаем
	               |	И ДанныеИзФайла.СотрудникНайден
	               |
	               |ИНДЕКСИРОВАТЬ ПО
	               |	СотрудникЗУП
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	чартер_ЗаписьНаРейс.Сотрудник КАК Сотрудник
	               |ПОМЕСТИТЬ втРанееЗарегистрированныеСотрудники
	               |ИЗ
	               |	РегистрСведений.чартер_ЗаписьНаРейс КАК чартер_ЗаписьНаРейс
	               |ГДЕ
	               |	чартер_ЗаписьНаРейс.Рейс = &Рейс
	               |
	               |ИНДЕКСИРОВАТЬ ПО
	               |	Сотрудник
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	втДанныеИзФайла.СотрудникЗУП КАК СотрудникЗУП,
	               |	втДанныеИзФайла.ТабельныйНомер КАК ТабельныйНомер,
	               |	втДанныеИзФайла.ФИО КАК ФИО
	               |ИЗ
	               |	втДанныеИзФайла КАК втДанныеИзФайла
	               |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ втРанееЗарегистрированныеСотрудники КАК втРанееЗаркгистрированныеСотрудники
	               |		ПО втДанныеИзФайла.СотрудникЗУП = втРанееЗаркгистрированныеСотрудники.Сотрудник
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	втДанныеИзФайла.Организация КАК Организация,
	               |	втДанныеИзФайла.ТабельныйНомер КАК ТабельныйНомер,
	               |	втДанныеИзФайла.ФИО КАК ФИО,
	               |	втДанныеИзФайла.Должность КАК Должность,
	               |	втДанныеИзФайла.Подразделение КАК Подразделение,
	               |	втДанныеИзФайла.НомерТелефона КАК НомерТелефона,
	               |	втДанныеИзФайла.СотрудникЗУП КАК СотрудникЗУП,
	               |	втДанныеИзФайла.ПричиныВылета КАК ПричиныВылета
	               |ИЗ
	               |	втДанныеИзФайла КАК втДанныеИзФайла
	               |		ЛЕВОЕ СОЕДИНЕНИЕ втРанееЗарегистрированныеСотрудники КАК втРанееЗаркгистрированныеСотрудники
	               |		ПО втДанныеИзФайла.СотрудникЗУП = втРанееЗаркгистрированныеСотрудники.Сотрудник
	               |ГДЕ
	               |	втРанееЗаркгистрированныеСотрудники.Сотрудник ЕСТЬ NULL";	               
	
	Возврат ТекстЗапроса;
	
КонецФункции

&НаКлиенте
Процедура ВыбратьВсех(Команда)

	Для каждого Строка Из Объект.ДанныеДляЗагрузки Цикл		
		Если Строка.СотрудникНайден Тогда
			Если Строка.Загружаем Тогда
				Продолжить;
			Иначе
				Строка.Загружаем = Истина;
			КонецЕсли;	
		КонецЕсли;                 
	КонецЦикла;

КонецПроцедуры

&НаКлиенте
Процедура СнятьВыбор(Команда)

	Для каждого Строка Из Объект.ДанныеДляЗагрузки Цикл		
		Если Не Строка.Загружаем Тогда
			Продолжить;
		Иначе
			Строка.Загружаем = Ложь;
		КонецЕсли;                         		
	КонецЦикла;

КонецПроцедуры

#КонецОбласти

